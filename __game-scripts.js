var{createScript:createScript,Vec2:Vec2}=pc;function applyRadialDeadZone(e,t,i,s){const a=e.length();if(a>i){const n=1-s-i,o=Math.min(1,(a-i)/n);t.copy(e).scale(o/a)}else t.set(0,0)}class DesktopInput{_canvas;_enabled=!0;app;constructor(e){this.app=e,this._canvas=e.graphicsDevice.canvas,this._onKeyDown=this._onKeyDown.bind(this),this._onKeyUp=this._onKeyUp.bind(this),this._onMouseDown=this._onMouseDown.bind(this),this._onMouseMove=this._onMouseMove.bind(this),this.enabled=!0}set enabled(e){this._enabled=e,e?(window.addEventListener("keydown",this._onKeyDown),window.addEventListener("keyup",this._onKeyUp),window.addEventListener("mousedown",this._onMouseDown),window.addEventListener("mousemove",this._onMouseMove)):(window.removeEventListener("keydown",this._onKeyDown),window.removeEventListener("keyup",this._onKeyUp),window.removeEventListener("mousedown",this._onMouseDown),window.removeEventListener("mousemove",this._onMouseMove))}get enabled(){return this._enabled}_handleKey(e,t){switch(e.toLowerCase()){case"w":case"arrowup":this.app.fire("cc:move:forward",t);break;case"s":case"arrowdown":this.app.fire("cc:move:backward",t);break;case"a":case"arrowleft":this.app.fire("cc:move:left",t);break;case"d":case"arrowright":this.app.fire("cc:move:right",t);break;case" ":this.app.fire("cc:jump",!!t);break;case"shift":this.app.fire("cc:sprint",!!t)}}_onKeyDown(e){document.pointerLockElement===this._canvas&&(e.repeat||this._handleKey(e.key,1))}_onKeyUp(e){e.repeat||this._handleKey(e.key,0)}_onMouseDown(e){document.pointerLockElement!==this._canvas&&this._canvas.requestPointerLock()}_onMouseMove(e){if(document.pointerLockElement!==this._canvas)return;const t=e.movementX||e.mozMovementX||e.webkitMovementX||0,i=e.movementY||e.mozMovementY||e.webkitMovementY||0;this.app.fire("cc:look",t,i)}destroy(){this.enabled=!1}}class MobileInput{_device;_canvas;_enabled=!0;_lastRightTap=0;_jumpTimeout;_remappedPos=new Vec2;_leftStick={identifier:-1,center:new Vec2,pos:new Vec2};_rightStick={identifier:-1,center:new Vec2,pos:new Vec2};app;deadZone=.3;turnSpeed=30;radius=50;_doubleTapInterval=300;constructor(e){this.app=e,this._device=e.graphicsDevice,this._canvas=e.graphicsDevice.canvas,this._onTouchStart=this._onTouchStart.bind(this),this._onTouchMove=this._onTouchMove.bind(this),this._onTouchEnd=this._onTouchEnd.bind(this),this.enabled=!0}set enabled(e){this._enabled=e,e?(this._canvas.addEventListener("touchstart",this._onTouchStart,!1),this._canvas.addEventListener("touchmove",this._onTouchMove,!1),this._canvas.addEventListener("touchend",this._onTouchEnd,!1)):(this._canvas.removeEventListener("touchstart",this._onTouchStart,!1),this._canvas.removeEventListener("touchmove",this._onTouchMove,!1),this._canvas.removeEventListener("touchend",this._onTouchEnd,!1))}get enabled(){return this._enabled}_onTouchStart(e){e.preventDefault();const t=this._device.width/this._canvas.clientWidth,i=this._device.height/this._canvas.clientHeight,s=e.changedTouches;for(let e=0;e<s.length;e++){const a=s[e];if(a.pageX<=this._canvas.clientWidth/2&&-1===this._leftStick.identifier)this._leftStick.identifier=a.identifier,this._leftStick.center.set(a.pageX,a.pageY),this._leftStick.pos.set(0,0),this.app.fire("leftjoystick:enable",a.pageX*t,a.pageY*i);else if(a.pageX>this._canvas.clientWidth/2&&-1===this._rightStick.identifier){this._rightStick.identifier=a.identifier,this._rightStick.center.set(a.pageX,a.pageY),this._rightStick.pos.set(0,0),this.app.fire("rightjoystick:enable",a.pageX*t,a.pageY*i);const e=Date.now();e-this._lastRightTap<this._doubleTapInterval&&(this._jumpTimeout&&clearTimeout(this._jumpTimeout),this.app.fire("cc:jump",!0),this._jumpTimeout=setTimeout((()=>this.app.fire("cc:jump",!1)),50)),this._lastRightTap=e}}}_onTouchMove(e){e.preventDefault();const t=this._device.width/this._canvas.clientWidth,i=this._device.height/this._canvas.clientHeight,s=e.changedTouches;for(let e=0;e<s.length;e++){const a=s[e];a.identifier===this._leftStick.identifier?(this._leftStick.pos.set(a.pageX,a.pageY),this._leftStick.pos.sub(this._leftStick.center),this._leftStick.pos.scale(1/this.radius),this.app.fire("leftjoystick:move",a.pageX*t,a.pageY*i)):a.identifier===this._rightStick.identifier&&(this._rightStick.pos.set(a.pageX,a.pageY),this._rightStick.pos.sub(this._rightStick.center),this._rightStick.pos.scale(1/this.radius),this.app.fire("rightjoystick:move",a.pageX*t,a.pageY*i))}}_onTouchEnd(e){e.preventDefault();for(var t=e.changedTouches,i=0;i<t.length;i++){var s=t[i];s.identifier===this._leftStick.identifier?(this._leftStick.identifier=-1,this.app.fire("cc:move:forward",0),this.app.fire("cc:move:backward",0),this.app.fire("cc:move:left",0),this.app.fire("cc:move:right",0),this.app.fire("leftjoystick:disable")):s.identifier===this._rightStick.identifier&&(this._rightStick.identifier=-1,this.app.fire("rightjoystick:disable"))}}update(e){if(-1!==this._leftStick.identifier){applyRadialDeadZone(this._leftStick.pos,this._remappedPos,this.deadZone,0);const e=-this._remappedPos.y;this._lastForward!==e&&(e>0&&(this.app.fire("cc:move:forward",Math.abs(e)),this.app.fire("cc:move:backward",0)),e<0&&(this.app.fire("cc:move:forward",0),this.app.fire("cc:move:backward",Math.abs(e))),0===e&&(this.app.fire("cc:move:forward",0),this.app.fire("cc:move:backward",0)),this._lastForward=e);const t=this._remappedPos.x;this._lastStrafe!==t&&(t>0&&(this.app.fire("cc:move:left",0),this.app.fire("cc:move:right",Math.abs(t))),t<0&&(this.app.fire("cc:move:left",Math.abs(t)),this.app.fire("cc:move:right",0)),0===t&&(this.app.fire("cc:move:left",0),this.app.fire("cc:move:right",0)),this._lastStrafe=t)}if(-1!==this._rightStick.identifier){applyRadialDeadZone(this._rightStick.pos,this._remappedPos,this.deadZone,0);const e=this._remappedPos.x*this.turnSpeed,t=this._remappedPos.y*this.turnSpeed;this.app.fire("cc:look",e,t)}}destroy(){this.enabled=!1}}class GamePadInput{_jumpTimeout;_lastForward=0;_lastStrafe=0;_lastJump=!1;_remappedPos=new Vec2;_leftStick={center:new Vec2,pos:new Vec2};_rightStick={center:new Vec2,pos:new Vec2};app;deadZoneLow=.1;deadZoneHigh=.1;turnSpeed=30;constructor(e){this.app=e}update(e){const t=navigator.getGamepads?navigator.getGamepads():[];for(let e=0;e<t.length;e++){const i=t[e];if(i&&"standard"===i.mapping&&i.axes.length>=4){this._leftStick.pos.set(i.axes[0],i.axes[1]),applyRadialDeadZone(this._leftStick.pos,this._remappedPos,this.deadZoneLow,this.deadZoneHigh);const e=-this._remappedPos.y;this._lastForward!==e&&(e>0&&(this.app.fire("cc:move:forward",Math.abs(e)),this.app.fire("cc:move:backward",0)),e<0&&(this.app.fire("cc:move:forward",0),this.app.fire("cc:move:backward",Math.abs(e))),0===e&&(this.app.fire("cc:move:forward",0),this.app.fire("cc:move:backward",0)),this._lastForward=e);const t=this._remappedPos.x;this._lastStrafe!==t&&(t>0&&(this.app.fire("cc:move:left",0),this.app.fire("cc:move:right",Math.abs(t))),t<0&&(this.app.fire("cc:move:left",Math.abs(t)),this.app.fire("cc:move:right",0)),0===t&&(this.app.fire("cc:move:left",0),this.app.fire("cc:move:right",0)),this._lastStrafe=t),this._rightStick.pos.set(i.axes[2],i.axes[3]),applyRadialDeadZone(this._rightStick.pos,this._remappedPos,this.deadZoneLow,this.deadZoneHigh);const s=this._remappedPos.x*this.turnSpeed,a=this._remappedPos.y*this.turnSpeed;this.app.fire("cc:look",s,a),i.buttons[0].pressed&&!this._lastJump&&(this._jumpTimeout&&clearTimeout(this._jumpTimeout),this.app.fire("cc:jump",!0),this._jumpTimeout=setTimeout((()=>this.app.fire("cc:jump",!1)),50)),this._lastJump=i.buttons[0].pressed}}}destroy(){}}const DesktopInputScript=createScript("desktopInput");DesktopInputScript.prototype.initialize=function(){this.input=new DesktopInput(this.app),this.on("enable",(()=>this.input.enabled=!0)),this.on("disable",(()=>this.input.enabled=!1)),this.on("destroy",(()=>this.input.destroy()))};const MobileInputScript=createScript("mobileInput");MobileInputScript.attributes.add("deadZone",{title:"Dead Zone",description:"Radial thickness of inner dead zone of the virtual joysticks. This dead zone ensures the virtual joysticks report a value of 0 even if a touch deviates a small amount from the initial touch.",type:"number",min:0,max:.4,default:.3}),MobileInputScript.attributes.add("turnSpeed",{title:"Turn Speed",description:"Maximum turn speed in degrees per second",type:"number",default:30}),MobileInputScript.attributes.add("radius",{title:"Radius",description:"The radius of the virtual joystick in CSS pixels.",type:"number",default:50}),MobileInputScript.attributes.add("_doubleTapInterval",{title:"Double Tap Interval",description:"The time in milliseconds between two taps of the right virtual joystick for a double tap to register. A double tap will trigger a cc:jump.",type:"number",default:300}),MobileInputScript.prototype.initialize=function(){this.input=new MobileInput(this.app),this.input.deadZone=this.deadZone,this.input.turnSpeed=this.turnSpeed,this.input.radius=this.radius,this.input._doubleTapInterval=this._doubleTapInterval,this.on("enable",(()=>this.input.enabled=!0)),this.on("disable",(()=>this.input.enabled=!1)),this.on("destroy",(()=>this.input.destroy()))},MobileInputScript.prototype.update=function(e){this.input.update(e)};const GamePadInputScript=createScript("gamePadInput");GamePadInputScript.attributes.add("deadZoneLow",{title:"Low Dead Zone",description:"Radial thickness of inner dead zone of pad's joysticks. This dead zone ensures that all pads report a value of 0 for each joystick axis when untouched.",type:"number",min:0,max:.4,default:.1}),GamePadInputScript.attributes.add("deadZoneHigh",{title:"High Dead Zone",description:"Radial thickness of outer dead zone of pad's joysticks. This dead zone ensures that all pads can reach the -1 and 1 limits of each joystick axis.",type:"number",min:0,max:.4,default:.1}),GamePadInputScript.attributes.add("turnSpeed",{title:"Turn Speed",description:"Maximum turn speed in degrees per second",type:"number",default:30}),GamePadInputScript.prototype.initialize=function(){this.input=new GamePadInput(this.app),this.input.deadZoneLow=this.deadZoneLow,this.input.deadZoneHigh=this.deadZoneHigh,this.input.turnSpeed=this.turnSpeed,this.on("destroy",(()=>this.input.destroy()))},GamePadInputScript.prototype.update=function(e){this.input.update(e)};var{math:math,Vec2:Vec2,Vec3:Vec3,Mat4:Mat4}=pc;const LOOK_MAX_ANGLE=90,tmpVa=new Vec2,tmpV1=new Vec3,tmpV2=new Vec3,tmpM1=new Mat4;class CharacterController{_camera;_rigidbody;_jumping=!1;app;entity;look=new Vec2;controls={forward:0,backward:0,left:0,right:0,jump:!1,sprint:!1};lookSens=.08;speedGround=50;speedAir=5;sprintMult=1.5;velocityDampingGround=.99;velocityDampingAir=.99925;jumpForce=600;constructor(t,o,i){if(this.app=t,this.entity=i,!o)throw new Error("No camera entity found");if(this._camera=o,!i.rigidbody)throw new Error("No rigidbody component found");this._rigidbody=i.rigidbody,this.app.on("cc:look",((t,o)=>{this.look.x=math.clamp(this.look.x-o*this.lookSens,-90,90),this.look.y-=t*this.lookSens})),this.app.on("cc:move:forward",(t=>{this.controls.forward=t})),this.app.on("cc:move:backward",(t=>{this.controls.backward=t})),this.app.on("cc:move:left",(t=>{this.controls.left=t})),this.app.on("cc:move:right",(t=>{this.controls.right=t})),this.app.on("cc:jump",(t=>{this.controls.jump=t})),this.app.on("cc:sprint",(t=>{this.controls.sprint=t}))}_checkIfGrounded(){const t=this.entity.getPosition(),o=tmpV1.copy(t).add(Vec3.DOWN);o.y-=.1,this._grounded=!!this._rigidbody.system.raycastFirst(t,o)}_jump(){this.controls.jump&&!this._jumping&&this._grounded&&(this._jumping=!0,setTimeout((()=>this._jumping=!1),50),this._rigidbody.applyImpulse(0,this.jumpForce,0))}_look(){this._camera.setLocalEulerAngles(this.look.x,this.look.y,0)}_move(t){tmpM1.setFromAxisAngle(Vec3.UP,this.look.y);const o=tmpV1.set(0,0,0);this.controls.forward&&o.add(tmpV2.set(0,0,-this.controls.forward)),this.controls.backward&&o.add(tmpV2.set(0,0,this.controls.backward)),this.controls.left&&o.add(tmpV2.set(-this.controls.left,0,0)),this.controls.right&&o.add(tmpV2.set(this.controls.right,0,0)),tmpM1.transformVector(o,o);let i=this._grounded?this.speedGround:this.speedAir;this.controls.sprint&&(i*=this.sprintMult);const r=o.mulScalar(i*t),e=this._rigidbody.linearVelocity.add(r),s=this._grounded?this.velocityDampingGround:this.velocityDampingAir,n=Math.pow(s,1e3*t);e.x*=n,e.z*=n,this._rigidbody.linearVelocity=e}update(t){this._checkIfGrounded(),this._jump(),this._look(),this._move(t)}destroy(){}}const CCScript=pc.createScript("character-controller");CCScript.attributes.add("camera",{type:"entity"}),CCScript.attributes.add("lookSens",{type:"number",default:.08}),CCScript.attributes.add("speedGround",{type:"number",default:50}),CCScript.attributes.add("speedAir",{type:"number",default:5}),CCScript.attributes.add("sprintMult",{type:"number",default:1.5}),CCScript.attributes.add("velocityDampingGround",{type:"number",default:.99}),CCScript.attributes.add("velocityDampingAir",{type:"number",default:.99925}),CCScript.attributes.add("jumpForce",{type:"number",default:600}),CCScript.prototype.initialize=function(){this.controller=new CharacterController(this.app,this.camera,this.entity),this.controller.lookSens=this.lookSens,this.controller.speedGround=this.speedGround,this.controller.speedAir=this.speedAir,this.controller.sprintMult=this.sprintMult,this.controller.velocityDampingGround=this.velocityDampingGround,this.controller.velocityDampingAir=this.velocityDampingAir,this.controller.jumpForce=this.jumpForce,this.on("destroy",(()=>controller.destroy()))},CCScript.prototype.update=function(t){this.controller.update(t)};